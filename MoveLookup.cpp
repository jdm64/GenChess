#include "MoveLookup.h"

using namespace std;

static char knight_lookup[64][9] = {	// 336 moves
	{10, 17, -1, -1, -1, -1, -1, -1, -1}, {11, 16, 18, -1, -1, -1, -1, -1, -1},
	{ 8, 12, 17, 19, -1, -1, -1, -1, -1}, { 9, 13, 18, 20, -1, -1, -1, -1, -1},
	{10, 14, 19, 21, -1, -1, -1, -1, -1}, {11, 15, 20, 22, -1, -1, -1, -1, -1},
	{12, 21, 23, -1, -1, -1, -1, -1, -1}, {13, 22, -1, -1, -1, -1, -1, -1, -1},
	{ 2, 18, 25, -1, -1, -1, -1, -1, -1}, { 3, 19, 24, 26, -1, -1, -1, -1, -1},
	{ 0,  4, 16, 20, 25, 27, -1, -1, -1}, { 1,  5, 17, 21, 26, 28, -1, -1, -1},
	{ 2,  6, 18, 22, 27, 29, -1, -1, -1}, { 3,  7, 19, 23, 28, 30, -1, -1, -1},
	{ 4, 20, 29, 31, -1, -1, -1, -1, -1}, { 5, 21, 30, -1, -1, -1, -1, -1, -1},
	{ 1, 10, 26, 33, -1, -1, -1, -1, -1}, { 0,  2, 11, 27, 32, 34, -1, -1, -1},
	{ 1,  3,  8, 12, 24, 28, 33, 35, -1}, { 2,  4,  9, 13, 25, 29, 34, 36, -1},
	{ 3,  5, 10, 14, 26, 30, 35, 37, -1}, { 4,  6, 11, 15, 27, 31, 36, 38, -1},
	{ 5,  7, 12, 28, 37, 39, -1, -1, -1}, { 6, 13, 29, 38, -1, -1, -1, -1, -1},
	{ 9, 18, 34, 41, -1, -1, -1, -1, -1}, { 8, 10, 19, 35, 40, 42, -1, -1, -1},
	{ 9, 11, 16, 20, 32, 36, 41, 43, -1}, {10, 12, 17, 21, 33, 37, 42, 44, -1},
	{11, 13, 18, 22, 34, 38, 43, 45, -1}, {12, 14, 19, 23, 35, 39, 44, 46, -1},
	{13, 15, 20, 36, 45, 47, -1, -1, -1}, {14, 21, 37, 46, -1, -1, -1, -1, -1},
	{17, 26, 42, 49, -1, -1, -1, -1, -1}, {16, 18, 27, 43, 48, 50, -1, -1, -1},
	{17, 19, 24, 28, 40, 44, 49, 51, -1}, {18, 20, 25, 29, 41, 45, 50, 52, -1},
	{19, 21, 26, 30, 42, 46, 51, 53, -1}, {20, 22, 27, 31, 43, 47, 52, 54, -1},
	{21, 23, 28, 44, 53, 55, -1, -1, -1}, {22, 29, 45, 54, -1, -1, -1, -1, -1},
	{25, 34, 50, 57, -1, -1, -1, -1, -1}, {24, 26, 35, 51, 56, 58, -1, -1, -1},
	{25, 27, 32, 36, 48, 52, 57, 59, -1}, {26, 28, 33, 37, 49, 53, 58, 60, -1},
	{27, 29, 34, 38, 50, 54, 59, 61, -1}, {28, 30, 35, 39, 51, 55, 60, 62, -1},
	{29, 31, 36, 52, 61, 63, -1, -1, -1}, {30, 37, 53, 62, -1, -1, -1, -1, -1},
	{33, 42, 58, -1, -1, -1, -1, -1, -1}, {32, 34, 43, 59, -1, -1, -1, -1, -1},
	{33, 35, 40, 44, 56, 60, -1, -1, -1}, {34, 36, 41, 45, 57, 61, -1, -1, -1},
	{35, 37, 42, 46, 58, 62, -1, -1, -1}, {36, 38, 43, 47, 59, 63, -1, -1, -1},
	{37, 39, 44, 60, -1, -1, -1, -1, -1}, {38, 45, 61, -1, -1, -1, -1, -1, -1},
	{41, 50, -1, -1, -1, -1, -1, -1, -1}, {40, 42, 51, -1, -1, -1, -1, -1, -1},
	{41, 43, 48, 52, -1, -1, -1, -1, -1}, {42, 44, 49, 53, -1, -1, -1, -1, -1},
	{43, 45, 50, 54, -1, -1, -1, -1, -1}, {44, 46, 51, 55, -1, -1, -1, -1, -1},
	{45, 47, 52, -1, -1, -1, -1, -1, -1}, {46, 53, -1, -1, -1, -1, -1, -1, -1}
};

static char king_lookup[64][9] = {	// Even=Rook, Odd=Bishop	420 moves
//	{ E,  O,  E,  O,  E,  O,  E,  O,  E}, { E,  O,  E,  O,  E,  O,  E,  O,  E}
	{ 1,  9,  8, -1, -1, -1, -1, -1, -1}, { 0,  8,  2, 10,  9, -1, -1, -1, -1},
	{ 1,  9,  3, 11, 10, -1, -1, -1, -1}, { 2, 10,  4, 12, 11, -1, -1, -1, -1},
	{ 3, 11,  5, 13, 12, -1, -1, -1, -1}, { 4, 12,  6, 14, 13, -1, -1, -1, -1},
	{ 5, 13,  7, 15, 14, -1, -1, -1, -1}, { 6, 14, 15, -1, -1, -1, -1, -1, -1},
	{ 0,  1,  9, 17, 16, -1, -1, -1, -1}, { 1,  0,  8,  2, 10, 16, 17, 18, -1},
	{ 2,  1,  9,  3, 11, 17, 18, 19, -1}, { 3,  2, 10,  4, 12, 18, 19, 20, -1},
	{ 4,  3, 11,  5, 13, 19, 20, 21, -1}, { 5,  4, 12,  6, 14, 20, 21, 22, -1},
	{ 6,  5, 13,  7, 15, 21, 22, 23, -1}, { 7,  6, 14, 22, 23, -1, -1, -1, -1},
	{ 8,  9, 17, 25, 24, -1, -1, -1, -1}, { 9,  8, 16, 10, 18, 24, 25, 26, -1},
	{10,  9, 17, 11, 19, 25, 26, 27, -1}, {11, 10, 18, 12, 20, 26, 27, 28, -1},
	{12, 11, 19, 13, 21, 27, 28, 29, -1}, {13, 12, 20, 14, 22, 28, 29, 30, -1},
	{14, 13, 21, 15, 23, 29, 30, 31, -1}, {15, 14, 22, 30, 31, -1, -1, -1, -1},
	{16, 17, 25, 33, 32, -1, -1, -1, -1}, {17, 16, 24, 18, 26, 32, 33, 34, -1},
	{18, 17, 25, 19, 27, 33, 34, 35, -1}, {19, 18, 26, 20, 28, 34, 35, 36, -1},
	{20, 19, 27, 21, 29, 35, 36, 37, -1}, {21, 20, 28, 22, 30, 36, 37, 38, -1},
	{22, 21, 29, 23, 31, 37, 38, 39, -1}, {23, 22, 30, 38, 39, -1, -1, -1, -1},
	{24, 25, 33, 41, 40, -1, -1, -1, -1}, {25, 24, 32, 26, 34, 40, 41, 42, -1},
	{26, 25, 33, 27, 35, 41, 42, 43, -1}, {27, 26, 34, 28, 36, 42, 43, 44, -1},
	{28, 27, 35, 29, 37, 43, 44, 45, -1}, {29, 28, 36, 30, 38, 44, 45, 46, -1},
	{30, 29, 37, 31, 39, 45, 46, 47, -1}, {31, 30, 38, 46, 47, -1, -1, -1, -1},
	{32, 33, 41, 49, 48, -1, -1, -1, -1}, {33, 32, 40, 34, 42, 48, 49, 50, -1},
	{34, 33, 41, 35, 43, 49, 50, 51, -1}, {35, 34, 42, 36, 44, 50, 51, 52, -1},
	{36, 35, 43, 37, 45, 51, 52, 53, -1}, {37, 36, 44, 38, 46, 52, 53, 54, -1},
	{38, 37, 45, 39, 47, 53, 54, 55, -1}, {39, 38, 46, 54, 55, -1, -1, -1, -1},
	{40, 41, 49, 57, 56, -1, -1, -1, -1}, {41, 40, 48, 42, 50, 56, 57, 58, -1},
	{42, 41, 49, 43, 51, 57, 58, 59, -1}, {43, 42, 50, 44, 52, 58, 59, 60, -1},
	{44, 43, 51, 45, 53, 59, 60, 61, -1}, {45, 44, 52, 46, 54, 60, 61, 62, -1},
	{46, 45, 53, 47, 55, 61, 62, 63, -1}, {47, 46, 54, 62, 63, -1, -1, -1, -1},
	{48, 49, 57, -1, -1, -1, -1, -1, -1}, {49, 48, 56, 50, 58, -1, -1, -1, -1},
	{50, 49, 57, 51, 59, -1, -1, -1, -1}, {51, 50, 58, 52, 60, -1, -1, -1, -1},
	{52, 51, 59, 53, 61, -1, -1, -1, -1}, {53, 52, 60, 54, 62, -1, -1, -1, -1},
	{54, 53, 61, 55, 63, -1, -1, -1, -1}, {55, 54, 62, -1, -1, -1, -1, -1, -1}
};

static char bishop_lookup[64][29] = {	// 560 moves
	//                         |                           |                           |                           |
	{ 9, 18, 27, 36, 45, 54, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{10, 19, 28, 37, 46, 55, -2,  8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{11, 20, 29, 38, 47, -2, -2,  9, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{12, 21, 30, 39, -2, -2, -2, 10, 17, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{11, 18, 25, 32, -2, -2, -2, 13, 22, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{12, 19, 26, 33, 40, -2, -2, 14, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{13, 20, 27, 34, 41, 48, -2, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{14, 21, 28, 35, 42, 49, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{17, 26, 35, 44, 53, 62, -2,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{18, 27, 36, 45, 54, 63, -2,  0, -2, -2, -2, -2, -2, -2,  2, -2, -2, -2, -2, -2, -2, 16, -1, -1, -1, -1, -1, -1, -1},
	{19, 28, 37, 46, 55, -2, -2, 17, 24, -2, -2, -2, -2, -2,  1, -2, -2, -2, -2, -2, -2,  3, -1, -1, -1, -1, -1, -1, -1},
	{20, 29, 38, 47, -2, -2, -2, 18, 25, 32, -2, -2, -2, -2,  2, -2, -2, -2, -2, -2, -2,  4, -1, -1, -1, -1, -1, -1, -1},
	{19, 26, 33, 40, -2, -2, -2, 21, 30, 39, -2, -2, -2, -2,  3, -2, -2, -2, -2, -2, -2,  5, -1, -1, -1, -1, -1, -1, -1},
	{20, 27, 34, 41, 48, -2, -2, 22, 31, -2, -2, -2, -2, -2,  4, -2, -2, -2, -2, -2, -2,  6, -1, -1, -1, -1, -1, -1, -1},
	{21, 28, 35, 42, 49, 56, -2,  5, -2, -2, -2, -2, -2, -2,  7, -2, -2, -2, -2, -2, -2, 23, -1, -1, -1, -1, -1, -1, -1},
	{22, 29, 36, 43, 50, 57, -2,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{25, 34, 43, 52, 61, -2, -2,  9,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{26, 35, 44, 53, 62, -2, -2, 10,  3, -2, -2, -2, -2, -2,  8, -2, -2, -2, -2, -2, -2, 24, -1, -1, -1, -1, -1, -1, -1},
	{27, 36, 45, 54, 63, -2, -2,  9,  0, -2, -2, -2, -2, -2, 11,  4, -2, -2, -2, -2, -2, 25, 32, -1, -1, -1, -1, -1, -1},
	{28, 37, 46, 55, -2, -2, -2, 26, 33, 40, -2, -2, -2, -2, 10,  1, -2, -2, -2, -2, -2, 12,  5, -1, -1, -1, -1, -1, -1},
	{27, 34, 41, 48, -2, -2, -2, 29, 38, 47, -2, -2, -2, -2, 11,  2, -2, -2, -2, -2, -2, 13,  6, -1, -1, -1, -1, -1, -1},
	{28, 35, 42, 49, 56, -2, -2, 12,  3, -2, -2, -2, -2, -2, 14,  7, -2, -2, -2, -2, -2, 30, 39, -1, -1, -1, -1, -1, -1},
	{29, 36, 43, 50, 57, -2, -2, 13,  4, -2, -2, -2, -2, -2, 15, -2, -2, -2, -2, -2, -2, 31, -1, -1, -1, -1, -1, -1, -1},
	{30, 37, 44, 51, 58, -2, -2, 14,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{33, 42, 51, 60, -2, -2, -2, 17, 10,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{34, 43, 52, 61, -2, -2, -2, 18, 11,  4, -2, -2, -2, -2, 16, -2, -2, -2, -2, -2, -2, 32, -1, -1, -1, -1, -1, -1, -1},
	{35, 44, 53, 62, -2, -2, -2, 19, 12,  5, -2, -2, -2, -2, 17,  8, -2, -2, -2, -2, -2, 33, 40, -1, -1, -1, -1, -1, -1},
	{36, 45, 54, 63, -2, -2, -2, 18,  9,  0, -2, -2, -2, -2, 20, 13,  6, -2, -2, -2, -2, 34, 41, 48, -1, -1, -1, -1, -1},
	{35, 42, 49, 56, -2, -2, -2, 19, 10,  1, -2, -2, -2, -2, 21, 14,  7, -2, -2, -2, -2, 37, 46, 55, -1, -1, -1, -1, -1},
	{36, 43, 50, 57, -2, -2, -2, 20, 11,  2, -2, -2, -2, -2, 22, 15, -2, -2, -2, -2, -2, 38, 47, -1, -1, -1, -1, -1, -1},
	{37, 44, 51, 58, -2, -2, -2, 21, 12,  3, -2, -2, -2, -2, 23, -2, -2, -2, -2, -2, -2, 39, -1, -1, -1, -1, -1, -1, -1},
	{38, 45, 52, 59, -2, -2, -2, 22, 13,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{25, 18, 11,  4, -2, -2, -2, 41, 50, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{26, 19, 12,  5, -2, -2, -2, 42, 51, 60, -2, -2, -2, -2, 24, -2, -2, -2, -2, -2, -2, 40, -1, -1, -1, -1, -1, -1, -1},
	{27, 20, 13,  6, -2, -2, -2, 43, 52, 61, -2, -2, -2, -2, 25, 16, -2, -2, -2, -2, -2, 41, 48, -1, -1, -1, -1, -1, -1},
	{28, 21, 14,  7, -2, -2, -2, 26, 17,  8, -2, -2, -2, -2, 42, 49, 56, -2, -2, -2, -2, 44, 53, 62, -1, -1, -1, -1, -1},
	{27, 18,  9,  0, -2, -2, -2, 29, 22, 15, -2, -2, -2, -2, 43, 50, 57, -2, -2, -2, -2, 45, 54, 63, -1, -1, -1, -1, -1},
	{28, 19, 10,  1, -2, -2, -2, 44, 51, 58, -2, -2, -2, -2, 30, 23, -2, -2, -2, -2, -2, 46, 55, -1, -1, -1, -1, -1, -1},
	{29, 20, 11,  2, -2, -2, -2, 45, 52, 59, -2, -2, -2, -2, 31, -2, -2, -2, -2, -2, -2, 47, -1, -1, -1, -1, -1, -1, -1},
	{30, 21, 12,  3, -2, -2, -2, 46, 53, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{33, 26, 19, 12,  5, -2, -2, 49, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{34, 27, 20, 13,  6, -2, -2, 50, 59, -2, -2, -2, -2, -2, 32, -2, -2, -2, -2, -2, -2, 48, -1, -1, -1, -1, -1, -1, -1},
	{35, 28, 21, 14,  7, -2, -2, 33, 24, -2, -2, -2, -2, -2, 49, 56, -2, -2, -2, -2, -2, 51, 60, -1, -1, -1, -1, -1, -1},
	{36, 29, 22, 15, -2, -2, -2, 34, 25, 16, -2, -2, -2, -2, 50, 57, -2, -2, -2, -2, -2, 52, 61, -1, -1, -1, -1, -1, -1},
	{35, 26, 17,  8, -2, -2, -2, 37, 30, 23, -2, -2, -2, -2, 51, 58, -2, -2, -2, -2, -2, 53, 62, -1, -1, -1, -1, -1, -1},
	{36, 27, 18,  9,  0, -2, -2, 38, 31, -2, -2, -2, -2, -2, 52, 59, -2, -2, -2, -2, -2, 54, 63, -1, -1, -1, -1, -1, -1},
	{37, 28, 19, 10,  1, -2, -2, 53, 60, -2, -2, -2, -2, -2, 39, -2, -2, -2, -2, -2, -2, 55, -1, -1, -1, -1, -1, -1, -1},
	{38, 29, 20, 11,  2, -2, -2, 54, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{41, 34, 27, 20, 13,  6, -2, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{42, 35, 28, 21, 14,  7, -2, 40, -2, -2, -2, -2, -2, -2, 56, -2, -2, -2, -2, -2, -2, 58, -1, -1, -1, -1, -1, -1, -1},
	{43, 36, 29, 22, 15, -2, -2, 41, 32, -2, -2, -2, -2, -2, 57, -2, -2, -2, -2, -2, -2, 59, -1, -1, -1, -1, -1, -1, -1},
	{44, 37, 30, 23, -2, -2, -2, 42, 33, 24, -2, -2, -2, -2, 58, -2, -2, -2, -2, -2, -2, 60, -1, -1, -1, -1, -1, -1, -1},
	{43, 34, 25, 16, -2, -2, -2, 45, 38, 31, -2, -2, -2, -2, 59, -2, -2, -2, -2, -2, -2, 61, -1, -1, -1, -1, -1, -1, -1},
	{44, 35, 26, 17,  8, -2, -2, 46, 39, -2, -2, -2, -2, -2, 60, -2, -2, -2, -2, -2, -2, 62, -1, -1, -1, -1, -1, -1, -1},
	{45, 36, 27, 18,  9,  0, -2, 47, -2, -2, -2, -2, -2, -2, 61, -2, -2, -2, -2, -2, -2, 63, -1, -1, -1, -1, -1, -1, -1},
	{46, 37, 28, 19, 10,  1, -2, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{49, 42, 35, 28, 21, 14,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{50, 43, 36, 29, 22, 15, -2, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{51, 44, 37, 30, 23, -2, -2, 49, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{52, 45, 38, 31, -2, -2, -2, 50, 41, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{51, 42, 33, 24, -2, -2, -2, 53, 46, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{52, 43, 34, 25, 16, -2, -2, 54, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{53, 44, 35, 26, 17,  8, -2, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{54, 45, 36, 27, 18,  9,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
};

static char rook_lookup[64][29] = { // 896 moves
	//                         |                           |                           |                           |
	{ 1,  2,  3,  4,  5,  6,  7,  8, 16, 24, 32, 40, 48, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{ 9, 17, 25, 33, 41, 49, 57,  2,  3,  4,  5,  6,  7, -2,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{10, 18, 26, 34, 42, 50, 58,  3,  4,  5,  6,  7, -2, -2,  1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{11, 19, 27, 35, 43, 51, 59,  4,  5,  6,  7, -2, -2, -2,  2,  1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{12, 20, 28, 36, 44, 52, 60,  3,  2,  1,  0, -2, -2, -2,  5,  6,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{13, 21, 29, 37, 45, 53, 61,  4,  3,  2,  1,  0, -2, -2,  6,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{14, 22, 30, 38, 46, 54, 62,  5,  4,  3,  2,  1,  0, -2,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{15, 23, 31, 39, 47, 55, 63,  6,  5,  4,  3,  2,  1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{ 9, 10, 11, 12, 13, 14, 15, 16, 24, 32, 40, 48, 56, -2,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{10, 11, 12, 13, 14, 15, -2, 17, 25, 33, 41, 49, 57, -2,  1, -2, -2, -2, -2, -2, -2,  8, -1, -1, -1, -1, -1, -1, -1},
	{18, 26, 34, 42, 50, 58, -2, 11, 12, 13, 14, 15, -2, -2,  9,  8, -2, -2, -2, -2, -2,  2, -1, -1, -1, -1, -1, -1, -1},
	{19, 27, 35, 43, 51, 59, -2, 12, 13, 14, 15, -2, -2, -2, 10,  9,  8, -2, -2, -2, -2,  3, -1, -1, -1, -1, -1, -1, -1},
	{20, 28, 36, 44, 52, 60, -2, 11, 10,  9,  8, -2, -2, -2, 13, 14, 15, -2, -2, -2, -2,  4, -1, -1, -1, -1, -1, -1, -1},
	{21, 29, 37, 45, 53, 61, -2, 12, 11, 10,  9,  8, -2, -2, 14, 15, -2, -2, -2, -2, -2,  5, -1, -1, -1, -1, -1, -1, -1},
	{13, 12, 11, 10,  9,  8, -2, 22, 30, 38, 46, 54, 62, -2,  6, -2, -2, -2, -2, -2, -2, 15, -1, -1, -1, -1, -1, -1, -1},
	{14, 13, 12, 11, 10,  9,  8, 23, 31, 39, 47, 55, 63, -2,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{17, 18, 19, 20, 21, 22, 23, 24, 32, 40, 48, 56, -2, -2,  8,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{18, 19, 20, 21, 22, 23, -2, 25, 33, 41, 49, 57, -2, -2,  9,  1, -2, -2, -2, -2, -2, 16, -1, -1, -1, -1, -1, -1, -1},
	{19, 20, 21, 22, 23, -2, -2, 26, 34, 42, 50, 58, -2, -2, 10,  2, -2, -2, -2, -2, -2, 17, 16, -1, -1, -1, -1, -1, -1},
	{27, 35, 43, 51, 59, -2, -2, 20, 21, 22, 23, -2, -2, -2, 18, 17, 16, -2, -2, -2, -2, 11,  3, -1, -1, -1, -1, -1, -1},
	{28, 36, 44, 52, 60, -2, -2, 19, 18, 17, 16, -2, -2, -2, 21, 22, 23, -2, -2, -2, -2, 12,  4, -1, -1, -1, -1, -1, -1},
	{20, 19, 18, 17, 16, -2, -2, 29, 37, 45, 53, 61, -2, -2, 13,  5, -2, -2, -2, -2, -2, 22, 23, -1, -1, -1, -1, -1, -1},
	{21, 20, 19, 18, 17, 16, -2, 30, 38, 46, 54, 62, -2, -2, 14,  6, -2, -2, -2, -2, -2, 23, -1, -1, -1, -1, -1, -1, -1},
	{22, 21, 20, 19, 18, 17, 16, 31, 39, 47, 55, 63, -2, -2, 15,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{25, 26, 27, 28, 29, 30, 31, 32, 40, 48, 56, -2, -2, -2, 16,  8,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{26, 27, 28, 29, 30, 31, -2, 33, 41, 49, 57, -2, -2, -2, 17,  9,  1, -2, -2, -2, -2, 24, -1, -1, -1, -1, -1, -1, -1},
	{27, 28, 29, 30, 31, -2, -2, 34, 42, 50, 58, -2, -2, -2, 18, 10,  2, -2, -2, -2, -2, 25, 24, -1, -1, -1, -1, -1, -1},
	{28, 29, 30, 31, -2, -2, -2, 35, 43, 51, 59, -2, -2, -2, 19, 11,  3, -2, -2, -2, -2, 26, 25, 24, -1, -1, -1, -1, -1},
	{27, 26, 25, 24, -2, -2, -2, 36, 44, 52, 60, -2, -2, -2, 20, 12,  4, -2, -2, -2, -2, 29, 30, 31, -1, -1, -1, -1, -1},
	{28, 27, 26, 25, 24, -2, -2, 37, 45, 53, 61, -2, -2, -2, 21, 13,  5, -2, -2, -2, -2, 30, 31, -1, -1, -1, -1, -1, -1},
	{29, 28, 27, 26, 25, 24, -2, 38, 46, 54, 62, -2, -2, -2, 22, 14,  6, -2, -2, -2, -2, 31, -1, -1, -1, -1, -1, -1, -1},
	{30, 29, 28, 27, 26, 25, 24, 39, 47, 55, 63, -2, -2, -2, 23, 15,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{33, 34, 35, 36, 37, 38, 39, 24, 16,  8,  0, -2, -2, -2, 40, 48, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{34, 35, 36, 37, 38, 39, -2, 25, 17,  9,  1, -2, -2, -2, 41, 49, 57, -2, -2, -2, -2, 32, -1, -1, -1, -1, -1, -1, -1},
	{35, 36, 37, 38, 39, -2, -2, 26, 18, 10,  2, -2, -2, -2, 42, 50, 58, -2, -2, -2, -2, 33, 32, -1, -1, -1, -1, -1, -1},
	{27, 19, 11,  3, -2, -2, -2, 36, 37, 38, 39, -2, -2, -2, 34, 33, 32, -2, -2, -2, -2, 43, 51, 59, -1, -1, -1, -1, -1},
	{28, 20, 12,  4, -2, -2, -2, 35, 34, 33, 32, -2, -2, -2, 37, 38, 39, -2, -2, -2, -2, 44, 52, 60, -1, -1, -1, -1, -1},
	{36, 35, 34, 33, 32, -2, -2, 29, 21, 13,  5, -2, -2, -2, 45, 53, 61, -2, -2, -2, -2, 38, 39, -1, -1, -1, -1, -1, -1},
	{37, 36, 35, 34, 33, 32, -2, 30, 22, 14,  6, -2, -2, -2, 46, 54, 62, -2, -2, -2, -2, 39, -1, -1, -1, -1, -1, -1, -1},
	{38, 37, 36, 35, 34, 33, 32, 31, 23, 15,  7, -2, -2, -2, 47, 55, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{41, 42, 43, 44, 45, 46, 47, 32, 24, 16,  8,  0, -2, -2, 48, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{42, 43, 44, 45, 46, 47, -2, 33, 25, 17,  9,  1, -2, -2, 49, 57, -2, -2, -2, -2, -2, 40, -1, -1, -1, -1, -1, -1, -1},
	{34, 26, 18, 10,  2, -2, -2, 43, 44, 45, 46, 47, -2, -2, 41, 40, -2, -2, -2, -2, -2, 50, 58, -1, -1, -1, -1, -1, -1},
	{35, 27, 19, 11,  3, -2, -2, 44, 45, 46, 47, -2, -2, -2, 42, 41, 40, -2, -2, -2, -2, 51, 59, -1, -1, -1, -1, -1, -1},
	{36, 28, 20, 12,  4, -2, -2, 43, 42, 41, 40, -2, -2, -2, 45, 46, 47, -2, -2, -2, -2, 52, 60, -1, -1, -1, -1, -1, -1},
	{37, 29, 21, 13,  5, -2, -2, 44, 43, 42, 41, 40, -2, -2, 46, 47, -2, -2, -2, -2, -2, 53, 61, -1, -1, -1, -1, -1, -1},
	{45, 44, 43, 42, 41, 40, -2, 38, 30, 22, 14,  6, -2, -2, 54, 62, -2, -2, -2, -2, -2, 47, -1, -1, -1, -1, -1, -1, -1},
	{46, 45, 44, 43, 42, 41, 40, 39, 31, 23, 15,  7, -2, -2, 55, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{49, 50, 51, 52, 53, 54, 55, 40, 32, 24, 16,  8,  0, -2, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{50, 51, 52, 53, 54, 55, -2, 41, 33, 25, 17,  9,  1, -2, 48, -2, -2, -2, -2, -2, -2, 57, -1, -1, -1, -1, -1, -1, -1},
	{42, 34, 26, 18, 10,  2, -2, 51, 52, 53, 54, 55, -2, -2, 49, 48, -2, -2, -2, -2, -2, 58, -1, -1, -1, -1, -1, -1, -1},
	{43, 35, 27, 19, 11,  3, -2, 52, 53, 54, 55, -2, -2, -2, 50, 49, 48, -2, -2, -2, -2, 59, -1, -1, -1, -1, -1, -1, -1},
	{44, 36, 28, 20, 12,  4, -2, 51, 50, 49, 48, -2, -2, -2, 53, 54, 55, -2, -2, -2, -2, 60, -1, -1, -1, -1, -1, -1, -1},
	{45, 37, 29, 21, 13,  5, -2, 52, 51, 50, 49, 48, -2, -2, 54, 55, -2, -2, -2, -2, -2, 61, -1, -1, -1, -1, -1, -1, -1},
	{46, 38, 30, 22, 14,  6, -2, 53, 52, 51, 50, 49, 48, -2, 55, -2, -2, -2, -2, -2, -2, 62, -1, -1, -1, -1, -1, -1, -1},
	{54, 53, 52, 51, 50, 49, 48, 47, 39, 31, 23, 15,  7, -2, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{48, 40, 32, 24, 16,  8,  0, 57, 58, 59, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{49, 41, 33, 25, 17,  9,  1, 58, 59, 60, 61, 62, 63, -2, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{50, 42, 34, 26, 18, 10,  2, 59, 60, 61, 62, 63, -2, -2, 57, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{51, 43, 35, 27, 19, 11,  3, 60, 61, 62, 63, -2, -2, -2, 58, 57, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{52, 44, 36, 28, 20, 12,  4, 59, 58, 57, 56, -2, -2, -2, 61, 62, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{53, 45, 37, 29, 21, 13,  5, 60, 59, 58, 57, 56, -2, -2, 62, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{54, 46, 38, 30, 22, 14,  6, 61, 60, 59, 58, 57, 56, -2, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{55, 47, 39, 31, 23, 15,  7, 62, 61, 60, 59, 58, 57, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
};

char *MoveLookup::board = NULL;

void MoveLookup::setBoard(char *b)
{
	board = b;
}

void MoveLookup::setPiece(int Index)
{
	loc = Index;
	type = abs(board[loc]);
	switch (type) {
	case PAWN:
	case KING:
		lookup = &king_lookup[loc][0];
		break;
	case ROOK:
	case QUEEN:
		lookup = &rook_lookup[loc][0];
		break;
	case BISHOP:
		lookup = &bishop_lookup[loc][0];
		break;
	case KNIGHT:
		lookup = &knight_lookup[loc][0];
		break;
	default:
		assert(0);
	}
	offset = 0;
}

void MoveLookup::setLoc(int Index)
{
	loc = Index;
	lookup = &rook_lookup[loc][0];
	offset = 0;
	k = 1;
	type = ROOK;
}

int MoveLookup::nextAttack()
{
	int n;

	switch (type) {
	case ROOK:
	case BISHOP:
loop1:
		n = lookup[offset];
		switch (n) {
		default:
			if (!board[n]) {
				offset++;
			} else if (board[loc] * board[n] < 0) {
				offset = ((offset / 7) + 1) * 7;
			} else {
				offset = ((offset / 7) + 1) * 7;
				goto loop1;
			}
			break;
		case -2:
			offset = ((offset / 7) + 1) * 7;
			goto loop1;
		case NONE:
			break;
		}
		return n;
	case QUEEN:
loop2:		// starts out rook
		n = lookup[offset];
		switch (n) {
		default:
			if (!board[n]) {
				offset++;
			} else if (board[loc] * board[n] < 0) {
				offset = ((offset / 7) + 1) * 7;
			} else {
				offset = ((offset / 7) + 1) * 7;
				goto loop2;
			}
			break;
		case -2:
			offset = ((offset / 7) + 1) * 7;
			goto loop2;
		case NONE:
			lookup = &bishop_lookup[loc][0];
			type = BISHOP;
			offset = 0;
			goto loop1;
		}
		return n;
	case KING:
	case KNIGHT:
loop3:
		n = lookup[offset];
		if (n != NONE) {
			offset++;
			if (board[loc] * board[n] > 0)
				goto loop3;
		}
		return n;
	case PAWN:
loop4:
		n = lookup[offset];
		if (n != NONE) {
			offset++;
			// Rook movement after++
			if (offset % 2) {
				if (board[n])
					goto loop4;
			} else if (board[n] * board[loc] >= 0) {
				goto loop4;
			}
		}
		return n;
	default:
		assert(0);
	}
	// this should never happen
	return NONE;
}

bool MoveLookup::isAttacked()
{
	int n;

	switch (type) {
	case ROOK:
loop1:
		n = lookup[offset];
		switch (n) {
		default:
			if (!board[n]) {
				offset++;
				k++;
				goto loop1;
			} else if (board[n] * board[loc] > 0){
				offset = ((offset / 7) + 1) * 7;
				goto loop1;
			} else {
				offset = ((offset / 7) + 1) * 7;
			}
			break;
		case -2:
			offset = ((offset / 7) + 1) * 7;
			k = 1;
			goto loop1;
		case NONE:
			lookup = &bishop_lookup[loc][0];
			type = BISHOP;
			offset = 0;
			k = 1;
			goto loop2;
		}
		switch (abs(board[n])) {
		case KING:
			if (k == 1)
				return true;
			// fall through
		case PAWN:
		case KNIGHT:
		case BISHOP:
		default:
			goto loop1;
		case ROOK:
		case QUEEN:
			return true;
		}
	case BISHOP:
loop2:
		n = lookup[offset];
		switch (n) {
		default:
			if (!board[n]) {
				offset++;
				k++;
				goto loop2;
			} else if (board[n] * board[loc] > 0){
				offset = ((offset / 7) + 1) * 7;
				goto loop2;
			} else {
				offset = ((offset / 7) + 1) * 7;
			}
			break;
		case -2:
			offset = ((offset / 7) + 1) * 7;
			k = 1;
			goto loop2;
		case NONE:
			lookup = &knight_lookup[loc][0];
			type = KNIGHT;
			offset = 0;
			// k = 1; not needed
			goto loop3;
		}
		switch (abs(board[n])) {
		case PAWN:
		case KING:
			if (k == 1)
				return true;
			// fall through
		case KNIGHT:
		case ROOK:
		default:
			goto loop2;
		case BISHOP:
		case QUEEN:
			return true;
		}
	case KNIGHT:
loop3:
		n = lookup[offset];
		if (n != NONE) {
			offset++;
			if (!board[n])
				goto loop3;
		} else {
			return false;
		}
		if (abs(board[n]) == KNIGHT && board[loc] * board[n] < 0)
			return true;
		goto loop3;
	default:
		assert(0);
	}
	// this never happens, real 'false' is at KNIGHT:else
	return false;
}
